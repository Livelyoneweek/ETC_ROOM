spring.application.name=etc
server.port=23512
# Logging Charset
logging.charset.console=UTF-8
logging.charset.file=UTF-8
# Logging Pattern
logging.pattern.console=[%highlight(%-5level)] [%d{yyyy-MM-dd HH:mm:ss}] [%thread] [%X{txId}] [%logger{0}:%line] %msg%n
logging.pattern.file=%-5level [%d{yyyy-MM-dd HH:mm:ss}] [%thread] [%X{txId}] [%logger{0}:%line] %msg%n
# Logging Levels
logging.level.root=info
logging.level.p6spy=info
logging.level.kr.co.choi.etc=info
# Logging File Name
logging.file.name=etc/etc.log
# Logback Rolling Policy
logging.logback.rollingpolicy.max-history=50
logging.logback.rollingpolicy.max-file-size=30MB
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}-%i.log

# p6spy log 만 키고 기본 로그 제거
decorator.datasource.p6spy.enable-logging=true
spring.jpa.show-sql=false

# 프로젝트 루트 ./data/mydb 파일db 생성 및 MODE=PostgreSQL 로 H2가 PostgreSQL 방언을 어느 정도 흉내
spring.datasource.url=jdbc:h2:file:./data/mydb;MODE=PostgreSQL;AUTO_SERVER=TRUE;
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop

spring.h2.console.enabled=true
spring.jpa.properties.hibernate.format_sql=true


# 1) 웹으로 노출할 엔드포인트 목록
#    health 외에는 모두 비노출
management.endpoints.web.exposure.include=health
# 2) Health 결과는 최소 정보만 공개 (UP/DOWN)
management.endpoint.health.show-details=never
